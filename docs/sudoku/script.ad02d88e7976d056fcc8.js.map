{"version":3,"file":"sudoku/script.ad02d88e7976d056fcc8.js","mappings":"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","sources":["webpack://melusc.github.io/webpack/runtime/chunk loaded","webpack://melusc.github.io/../src/constants.js","webpack://melusc.github.io/../src/util.js","webpack://melusc.github.io/../src/options.js","webpack://melusc.github.io/../src/create-element.js","webpack://melusc.github.io/../src/component.js","webpack://melusc.github.io/../src/diff/children.js","webpack://melusc.github.io/../src/diff/props.js","webpack://melusc.github.io/../src/diff/index.js","webpack://melusc.github.io/../src/diff/catch-error.js","webpack://melusc.github.io/../src/devtools.js","webpack://melusc.github.io/./node_modules/lodash-es/_arrayMap.js","webpack://melusc.github.io/./node_modules/lodash-es/isArray.js","webpack://melusc.github.io/./node_modules/lodash-es/_baseToString.js","webpack://melusc.github.io/./node_modules/lodash-es/uniqueId.js","webpack://melusc.github.io/./node_modules/lodash-es/toString.js","webpack://melusc.github.io/./src/sudoku/cell.ts","webpack://melusc.github.io/./src/sudoku/plugins/shared.ts","webpack://melusc.github.io/./src/sudoku/plugins/hidden-pairs.ts","webpack://melusc.github.io/./src/sudoku/plugins/naked-pairs.ts","webpack://melusc.github.io/./src/sudoku/plugins/pointing-arrows.ts","webpack://melusc.github.io/./src/sudoku/sudoku.ts","webpack://melusc.github.io/./src/sudoku/script.tsx","webpack://melusc.github.io/../src/render.js","webpack://melusc.github.io/webpack/bootstrap","webpack://melusc.github.io/webpack/runtime/define property getters","webpack://melusc.github.io/webpack/runtime/hasOwnProperty shorthand","webpack://melusc.github.io/webpack/runtime/make namespace object","webpack://melusc.github.io/webpack/runtime/jsonp chunk loading","webpack://melusc.github.io/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tc,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink[H:h]/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t(child === dom ||\n\t\t\t\t\t(nodeType ? child.localName == nodeType : child.nodeType == 3))\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value || (nodeType === 'progress' && !i))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(r[i], parentVNode, typeof vnode.type != 'function');\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) removeNode(vnode._dom);\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options, Fragment, Component } from 'preact';\n\nexport function initDevTools() {\n\tif (typeof window != 'undefined' && window.__PREACT_DEVTOOLS__) {\n\t\twindow.__PREACT_DEVTOOLS__.attachPreact('10.5.15', options, {\n\t\t\tFragment,\n\t\t\tComponent\n\t\t});\n\t}\n}\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","import toString from './toString.js';\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nexport default uniqueId;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import {uniqueId} from 'lodash';\n\nimport type {CellInterface} from './sudoku.d';\n\nconst emptyCellPossibles = (): Set<string> =>\n\tnew Set(Array.from({length: 9}, (_v, index) => `${index + 1}`));\n\nexport class Cell implements CellInterface {\n\tcontent: string | undefined;\n\n\tpossible = emptyCellPossibles();\n\n\tkey = uniqueId('cell-');\n\n\tvalid = true;\n\n\tsetValidity = (): this => {\n\t\tthis.valid\n\t\t\t= typeof this.content === 'undefined'\n\t\t\t\t? this.possible.size > 0\n\t\t\t\t: /^[1-9]$/.test(this.content);\n\n\t\treturn this;\n\t};\n\n\tsetContent = (content: string): this => {\n\t\tcontent = content.trim();\n\n\t\tif (content) {\n\t\t\tthis.content = content.trim();\n\t\t\tthis.possible.clear();\n\t\t} else {\n\t\t\tthis.clear();\n\t\t}\n\n\t\treturn this.setValidity();\n\t};\n\n\tclear = (): this => {\n\t\tthis.content = undefined;\n\n\t\tthis.possible = emptyCellPossibles();\n\n\t\tthis.valid = true;\n\n\t\treturn this;\n\t};\n}\n","// Stolen shamelessly from\n// https://web.archive.org/web/20190223113747/https://stackoverflow.com/questions/43122082/efficiently-count-the-number-of-bits-in-an-integer-in-javascript#43122214\nexport const bitCount = (n: number): number => {\n\tn -= (n >> 1) & 0x55_55_55_55;\n\tn = (n & 0x33_33_33_33) + ((n >> 2) & 0x33_33_33_33);\n\treturn (((n + (n >> 4)) & 0xF_0F_0F_0F) * 0x1_01_01_01) >> 24;\n};\n\nexport const getterFunctionNames = ['getRow', 'getCol', 'getBlock'] as const;\n\nexport const bitIndex = (n: number): number => {\n\tconst index = Math.log2(n);\n\n\tif (index !== Math.trunc(index)) {\n\t\tthrow new TypeError(`${n} doesn't have exactly one bit.`);\n\t}\n\n\treturn index;\n};\n","/*\n * See https://web.archive.org/web/20210331174704/https://bestofsudoku.com/sudoku-strategy\n */\n\nimport type {SudokuInterface} from '../sudoku.d';\nimport {bitCount, getterFunctionNames} from './shared';\n\nconst genericHiddenPairsSolver = (\n\tsudoku: SudokuInterface,\n\tgetterFunctionName: 'getCol' | 'getRow' | 'getBlock',\n): boolean => {\n\tlet anyChanged = false;\n\n\tfor (let structureIndex = 0; structureIndex < 9; ++structureIndex) {\n\t\tconst structure = sudoku[getterFunctionName](structureIndex);\n\n\t\t// Getting all the indexes of a number\n\t\t// works like this:\n\t\t// If 7 is in cells (0, 4, 6)\n\t\t// the resulting value will be \"1010001\"\n\t\t//                                    ^ for 0\n\t\t//                                ^ for 4\n\t\t//                              ^ for 6\n\t\t// Iterating through each cell and\n\t\t// doing `currentValue | 2 ** index`\n\t\t// This is a lot better than comparing arrays of indexes\n\t\tconst summary = new Map<string, number>();\n\n\t\tfor (let index = 0; index < 9; ++index) {\n\t\t\tconst {content, possible} = structure[index]!; // It's [0,8]\n\n\t\t\tif (content === undefined) {\n\t\t\t\tfor (const number of possible) {\n\t\t\t\t\tsummary.set(number, (summary.get(number) ?? 0) | (2 ** index));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/*\n          This part fixes a bug:\n          [\n            {1,2,3}, // these are possibles\n            {1,2},\n            3, // this is filled in that cell\n            ...\n          ]\n          Webpack doesn't keep the same order as is exported from plugins.ts\n          (and the plugins shouldn't rely on it).\n          When remove-duplicates (now naked-pairs) doesn't run first, the scenarios above can occur\n          where hidden-pairs finds the only cell that has 3 in #possible and then removes all others\n          (here cell at index 0), incorrectly resulting in two cells with 3\n        */\n\n\t\t\t\tsummary.set(content, (summary.get(content) ?? 0) | (2 ** index));\n\t\t\t}\n\t\t}\n\n\t\tconst equalIndexes = new Map<number, string[]>();\n\n\t\tfor (const [number, key] of summary) {\n\t\t\tif (bitCount(key) > 8) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet equalIndex = equalIndexes.get(key);\n\n\t\t\tif (!equalIndex) {\n\t\t\t\tequalIndex = [];\n\t\t\t\tequalIndexes.set(key, equalIndex);\n\t\t\t}\n\n\t\t\tequalIndex.push(number);\n\t\t}\n\n\t\tfor (const [key, numbers] of equalIndexes) {\n\t\t\tif (bitCount(key) < numbers.length) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`bitCount was smaller than allowed: ${key.toString(\n\t\t\t\t\t\t2,\n\t\t\t\t\t)}; ${numbers.join(',')}`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (bitCount(key) > numbers.length) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (let index = 0; index <= Math.log2(key); ++index) {\n\t\t\t\tif ((key & (2 ** index)) === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst cell = structure[index]!; // It's certainly [0,8]\n\n\t\t\t\tif (cell.possible.size > numbers.length) {\n\t\t\t\t\tanyChanged = true;\n\n\t\t\t\t\tcell.possible = new Set(numbers);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn anyChanged;\n};\n\nexport const hiddenPairs = (sudoku: SudokuInterface): boolean => {\n\tlet anyChanged = false;\n\n\tfor (const key of getterFunctionNames) {\n\t\tanyChanged = genericHiddenPairsSolver(sudoku, key) || anyChanged;\n\t}\n\n\treturn anyChanged;\n};\n","/*\n * See https://web.archive.org/web/20210331174704/https://bestofsudoku.com/sudoku-strategy\n */\n\nimport type {SudokuInterface} from '../sudoku.d';\nimport {bitCount, getterFunctionNames} from './shared';\n\nconst genericNakedPairsSolver = (\n\tsudoku: SudokuInterface,\n\tgetterFunctionName: 'getCol' | 'getRow' | 'getBlock',\n): boolean => {\n\tlet anyChanged = false;\n\n\tfor (let structureIndex = 0; structureIndex < 9; ++structureIndex) {\n\t\tconst structure = sudoku[getterFunctionName](structureIndex);\n\n\t\tconst summary = new Map<number, number>();\n\n\t\tfor (const [index, cell] of structure.entries()) {\n\t\t\tif (cell.content === undefined) {\n\t\t\t\tlet key = 0;\n\t\t\t\tfor (const number of cell.possible) {\n\t\t\t\t\tkey |= 2 ** (Number(number) - 1);\n\t\t\t\t}\n\n\t\t\t\tsummary.set(index, key);\n\t\t\t} else {\n\t\t\t\tsummary.set(\n\t\t\t\t\tindex,\n\t\t\t\t\t(summary.get(index) ?? 0) | (2 ** (Number(cell.content) - 1)),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst equalKeys = new Map<number, number[]>();\n\t\tfor (const [index, key] of summary) {\n\t\t\tlet array = equalKeys.get(key);\n\n\t\t\tif (!array) {\n\t\t\t\tarray = [];\n\t\t\t\tequalKeys.set(key, array);\n\t\t\t}\n\n\t\t\tarray.push(index);\n\t\t}\n\n\t\tfor (const [key, indices] of equalKeys) {\n\t\t\tif (bitCount(key) !== indices.length || indices.length > 8) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (let number = 0; number <= Math.log2(key); ++number) {\n\t\t\t\tif ((key & (2 ** number)) === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst numberString = `${number + 1}`;\n\n\t\t\t\tfor (const [index, cell] of structure.entries()) {\n\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\tif (!indices.includes(index) && cell.possible.has(numberString)) {\n\t\t\t\t\t\tanyChanged = true;\n\n\t\t\t\t\t\tcell.possible.delete(numberString);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn anyChanged;\n};\n\nexport const nakedPairs = (sudoku: SudokuInterface): boolean => {\n\tlet anyChanged = false;\n\n\tfor (const key of getterFunctionNames) {\n\t\tanyChanged = genericNakedPairsSolver(sudoku, key) || anyChanged;\n\t}\n\n\treturn anyChanged;\n};\n","import type {SudokuInterface, CellInterface} from '../sudoku.d';\nimport {bitCount, bitIndex} from './shared';\n\nconst clearSection = (\n\tstructure: CellInterface[],\n\tblockIndex: number,\n\tnumberToRemove: string,\n): boolean => {\n\tlet anyChanged = false;\n\n\tfor (const [index, cell] of structure.entries()) {\n\t\tif (index >= blockIndex && index < blockIndex + 3) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (cell.possible.has(numberToRemove)) {\n\t\t\tanyChanged = true;\n\n\t\t\tcell.possible.delete(numberToRemove);\n\t\t}\n\t}\n\n\treturn anyChanged;\n};\n\nexport const pointingArrows = (sudoku: SudokuInterface): boolean => {\n\tlet anyChanged = false;\n\n\tfor (let blockIndex = 0; blockIndex < 9; ++blockIndex) {\n\t\tconst block = sudoku.getBlock(blockIndex);\n\t\tconst blockRowIndex = Math.trunc(blockIndex / 3) * 3;\n\t\tconst blockColIndex = (blockIndex % 3) * 3;\n\n\t\t/*\n      The first three bits are for cols\n      The last three are for rows\n\n      If one of the sections has only one bit,\n      that is a pointing arrow\n    */\n\t\tconst summary = new Map<string, number>();\n\n\t\tfor (const [index, {content, possible}] of block.entries()) {\n\t\t\tconst row = Math.trunc(index / 3);\n\t\t\tconst col = index % 3;\n\n\t\t\tconst key = (2 ** col) | (2 ** (row + 3));\n\n\t\t\tif (content === undefined) {\n\t\t\t\tfor (const number of possible) {\n\t\t\t\t\tsummary.set(number, (summary.get(number) ?? 0) | key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsummary.set(content, (summary.get(content) ?? 0) | key);\n\t\t\t}\n\t\t}\n\n\t\tfor (const [number, key] of summary) {\n\t\t\tconst colSection = key & 0b111; // & 7\n\t\t\tconst rowSection = (key >> 3) & 0b111;\n\n\t\t\tif (bitCount(colSection) === 1 && bitCount(rowSection) > 1) {\n\t\t\t\tanyChanged\n\t\t\t\t\t= clearSection(\n\t\t\t\t\t\tsudoku.getCol(blockColIndex + bitIndex(colSection)),\n\t\t\t\t\t\tblockRowIndex,\n\t\t\t\t\t\tnumber,\n\t\t\t\t\t) || anyChanged;\n\t\t\t} else if (bitCount(rowSection) === 1 && bitCount(colSection) > 1) {\n\t\t\t\tanyChanged\n\t\t\t\t\t= clearSection(\n\t\t\t\t\t\tsudoku.getRow(blockRowIndex + bitIndex(rowSection)),\n\t\t\t\t\t\tblockColIndex,\n\t\t\t\t\t\tnumber,\n\t\t\t\t\t) || anyChanged;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn anyChanged;\n};\n","import {ReadonlyDeep} from 'type-fest';\nimport type {\n\tCells,\n\tCellInterface,\n\tSudokuInterface,\n\tSubscriptionCallback,\n\tDispatchTypes,\n\tNumberOnlySudoku,\n} from './sudoku.d';\n\nimport {Cell} from './cell';\nimport * as plugins from './plugins/plugins';\n\nexport const inRangeIncl = (low: number, high: number, n: number): void => {\n\tif (!Number.isInteger(n)) {\n\t\tthrow new TypeError(`${n} was not an integer.`);\n\t}\n\n\tif (n < low || n > high) {\n\t\tthrow new RangeError(`${n} ∉ [${low}, ${high}].`);\n\t}\n};\n\nexport class Sudoku implements SudokuInterface {\n\t_cells: Cells;\n\n\t#subscriptions: Set<SubscriptionCallback> = new Set();\n\n\t#plugins = Object.values(plugins);\n\n\tconstructor(array?: ReadonlyDeep<NumberOnlySudoku>) {\n\t\tthis._cells = Array.from({length: 81}, () => new Cell());\n\n\t\tif (array) {\n\t\t\tfor (const [rowIndex, row] of array.entries()) {\n\t\t\t\tfor (const [colIndex, cell] of row.entries()) {\n\t\t\t\t\tif (typeof cell === 'number') {\n\t\t\t\t\t\tconst rowIndex_ = rowIndex * 9; // Because of prettier and eslint's no-mixed-operators\n\n\t\t\t\t\t\tthis.setContent(rowIndex_ + colIndex, `${cell}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tsetContent = (index: number, content: string): this => {\n\t\tinRangeIncl(0, 80, index);\n\n\t\tconst cell = this._cells[index]!; // It's [0,80]\n\n\t\tcell.setContent(content);\n\n\t\tthis.cellsIndividuallyValidByStructure();\n\n\t\treturn this.#dispatch('change');\n\t};\n\n\tgetContent = (index: number): string | undefined => {\n\t\tinRangeIncl(0, 80, index);\n\n\t\t// It's [0,80]\n\t\treturn this._cells[index]!.content;\n\t};\n\n\tclearCell = (index: number): this => {\n\t\tthis.getCell(index).clear(); // Validate index there\n\n\t\tthis.cellsIndividuallyValidByStructure();\n\n\t\treturn this.#dispatch('change');\n\t};\n\n\tclearAllCells = (): this => {\n\t\tfor (const cell of this._cells) {\n\t\t\tcell.clear();\n\t\t}\n\n\t\treturn this.#dispatch('change');\n\t};\n\n\tgetCol = (col: number): CellInterface[] => {\n\t\tinRangeIncl(0, 8, col);\n\n\t\tconst result: CellInterface[] = [];\n\n\t\tfor (let index = col; index < 81; index += 9) {\n\t\t\tresult.push(this._cells[index]!);\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tgetRow = (row: number): CellInterface[] => {\n\t\tinRangeIncl(0, 8, row);\n\n\t\trow *= 9;\n\n\t\treturn this._cells.slice(row, row + 9);\n\t};\n\n\tgetBlock = (index: number): CellInterface[] => {\n\t\tinRangeIncl(0, 8, index);\n\n\t\tconst colOffset = (index % 3) * 3;\n\t\tconst rowOffset = Math.floor(index / 3) * 3;\n\n\t\tconst result = [];\n\n\t\tfor (let index_ = 0; index_ < 9; ++index_) {\n\t\t\tlet row = rowOffset + Math.floor(index_ / 3);\n\t\t\tconst col = colOffset + (index_ % 3);\n\n\t\t\trow *= 9;\n\n\t\t\tresult.push(this.getCell(row + col));\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tgetCell = (index: number): CellInterface => {\n\t\tinRangeIncl(0, 80, index);\n\n\t\treturn this._cells[index]!; // It's [0,80]\n\t};\n\n\tgetCells = (): Cells => [...this._cells];\n\n\tsolve = (): this => {\n\t\tif (this.isValid()) {\n\t\t\tfor (const cell of this._cells) {\n\t\t\t\tif (cell.content === undefined) {\n\t\t\t\t\tcell.clear(); // Reset possibles\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet anyChanged = false;\n\t\t\tlet sudokuIsValid = true;\n\n\t\t\tdo {\n\t\t\t\tanyChanged = false;\n\n\t\t\t\tfor (const plugin of this.#plugins) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tanyChanged = plugin(this) || anyChanged;\n\t\t\t\t\t} catch (error: unknown) {\n\t\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\t\tif (process.env['NODE_ENV'] !== 'AVA_TESTING') {\n\t\t\t\t\t\t\tconsole.error(error, this._cells);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsudokuIsValid = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (const [index, cell] of this._cells.entries()) {\n\t\t\t\t\tif (cell.content === undefined) {\n\t\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\t\tif (cell.possible.size === 1) {\n\t\t\t\t\t\t\t// We know that the set has one item\n\t\t\t\t\t\t\tcell.setContent(cell.possible.values().next().value as string);\n\t\t\t\t\t\t} else if (cell.possible.size === 0) {\n\t\t\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\t\t\tif (process.env['NODE_ENV'] !== 'AVA_TESTING') {\n\t\t\t\t\t\t\t\tconsole.error('cell.possible.size === 0', [index, cell]);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsudokuIsValid = false;\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsudokuIsValid &&= this.isValid();\n\t\t\t} while (anyChanged && sudokuIsValid);\n\n\t\t\tthis.#dispatch(sudokuIsValid ? 'finish' : 'error');\n\t\t} else {\n\t\t\tthis.#dispatch('error');\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tsubscribe = (callback: SubscriptionCallback): this => {\n\t\tthis.#subscriptions.add(callback);\n\n\t\treturn this;\n\t};\n\n\tunsubscribe = (callback: SubscriptionCallback): this => {\n\t\tthis.#subscriptions.delete(callback);\n\n\t\treturn this;\n\t};\n\n\t#dispatch = (type: DispatchTypes): this => {\n\t\tfor (const callback of this.#subscriptions) {\n\t\t\tcallback(this, type);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tcellsIndividuallyValidByStructure = (): boolean => {\n\t\tfor (const cell of this._cells) {\n\t\t\tcell.setValidity();\n\t\t}\n\n\t\tfor (let index = 0; index < 9; ++index) {\n\t\t\tfor (const structure of [\n\t\t\t\tthis.getCol(index),\n\t\t\t\tthis.getRow(index),\n\t\t\t\tthis.getBlock(index),\n\t\t\t]) {\n\t\t\t\tthis._validateByStructure(structure);\n\t\t\t}\n\t\t}\n\n\t\tfor (const [index, cell] of this._cells.entries()) {\n\t\t\tif (!cell.valid) {\n\t\t\t\tif (process.env['NODE_ENV'] !== 'AVA_TESTING') {\n\t\t\t\t\tconsole.error('cell was not valid', [index, cell]);\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tisValid = (): boolean => {\n\t\tconst keys = ['getRow', 'getBlock', 'getCol'] as const;\n\n\t\tfor (const key of keys) {\n\t\t\tfor (let index = 0; index < 9; ++index) {\n\t\t\t\tconst structure = this[key](index);\n\n\t\t\t\tconst dict = new Map<string, number>();\n\n\t\t\t\tfor (const cell of structure) {\n\t\t\t\t\tif (cell.content === undefined) {\n\t\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\t\tfor (const possible of cell.possible) {\n\t\t\t\t\t\t\tdict.set(possible, (dict.get(possible) ?? 0) + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdict.set(cell.content, (dict.get(cell.content) ?? 0) + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dict.size !== 9) {\n\t\t\t\t\tif (process.env['NODE_ENV'] !== 'AVA_TESTING') {\n\t\t\t\t\t\tconsole.error('dict.size !== 9', dict);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.cellsIndividuallyValidByStructure();\n\t};\n\n\t_validateByStructure = (structure: Cell[]): this => {\n\t\tconst found = new Map<string, number>();\n\t\tfor (const {content} of structure) {\n\t\t\tif (typeof content === 'string') {\n\t\t\t\tfound.set(content, (found.get(content) ?? 0) + 1);\n\t\t\t}\n\t\t}\n\n\t\tfor (const [key, amount] of found) {\n\t\t\tif (amount === 1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (const [index, cell] of structure.entries()) {\n\t\t\t\tif (cell.content === key) {\n\t\t\t\t\tif (process.env['NODE_ENV'] !== 'AVA_TESTING') {\n\t\t\t\t\t\tconsole.error('cell.content === key', [index, cell]);\n\t\t\t\t\t}\n\n\t\t\t\t\tcell.valid = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tisSolved = (): boolean => {\n\t\tif (!this.cellsIndividuallyValidByStructure()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (const cell of this._cells) {\n\t\t\tif (cell.content === undefined) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t};\n}\n","// eslint-disable-next-line import/no-unassigned-import\nimport 'preact/devtools';\n\nimport {render, h, Component} from 'preact';\nimport {produce} from 'immer';\n\nimport {Sudoku} from './sudoku';\nimport type {Cells} from './sudoku.d';\n\ninterface AppState {\n\tcells: Cells;\n\terror: undefined | string;\n\tfocused: number;\n}\n\nconst SvgEraser = () => (\n\t<svg\n\t\twidth=\"16\"\n\t\theight=\"16\"\n\t\tfill=\"currentColor\"\n\t\tclass=\"svg-eraser-fill\"\n\t\tviewBox=\"0 0 16 16\"\n\t>\n\t\t<path d=\"M8.086 2.207a2 2 0 0 1 2.828 0l3.879 3.879a2 2 0 0 1 0 2.828l-5.5 5.5A2 2 0 0 1 7.879 15H5.12a2 2 0 0 1-1.414-.586l-2.5-2.5a2 2 0 0 1 0-2.828l6.879-6.879zm.66 11.34L3.453 8.254 1.914 9.793a1 1 0 0 0 0 1.414l2.5 2.5a1 1 0 0 0 .707.293H7.88a1 1 0 0 0 .707-.293l.16-.16z\" />\n\t</svg>\n);\n\nconst _ = undefined; // Looks better, than loads of `undefined`\n\nconst sudokus = {\n\teasy: [\n\t\t[5, _, 3, _, 9, 4],\n\t\t[_, 9, _, _, 3, 6, 2, 5, 8],\n\t\t[_, _, _, _, _, _, 3],\n\t\t[_, _, 8, 9, 5, _, 6, 7],\n\t\t[],\n\t\t[_, 7, 2, _, 6, 1, 4],\n\t\t[_, _, 4],\n\t\t[6, 5, 9, 8, 2, _, _, 1],\n\t\t[_, _, _, 1, 4, _, 5, _, 6],\n\t],\n\tevil: [\n\t\t[6, _, 4, _, _, _, _, _, 3],\n\t\t[_, _, _, _, 3, 7, 8],\n\t\t[_, _, _, 5, _, _, 7],\n\t\t[8, 9, _, 1],\n\t\t[3, _, _, _, _, _, _, _, 2],\n\t\t[_, _, _, _, _, 3, _, 1, 9],\n\t\t[_, _, 5, _, _, 9],\n\t\t[_, _, 1, 8, 6],\n\t\t[9, _, _, _, _, _, 4, _, 8],\n\t],\n\texpert: [\n\t\t[_, _, _, _, _, 4, _, _, 2],\n\t\t[_, 6, _, 2, _, _, _, 3],\n\t\t[_, 8, _, _, _, 3, 5, _, 9],\n\t\t[_, 4, _, _, _, _, 1],\n\t\t[1, _, _, 7, _, 5],\n\t\t[5, _, 3],\n\t\t[_, 9, _, 3],\n\t\t[_, _, 4, _, 6, 1],\n\t\t[_, _, 5, _, _, _, 7],\n\t],\n\tinvalid1: [\n\t\t// Here both 5 and 6 would have to be in the middle/middle cell\n\t\t// which is not possible, since only one number can be in each cell\n\t\t[],\n\t\t[_, _, _, 6],\n\t\t[_, _, _, 5],\n\t\t[_, _, _, _, _, _, 5, 6],\n\t\t[],\n\t\t[_, 6, 5],\n\t\t[_, _, _, _, _, 5],\n\t\t[_, _, _, _, _, 6],\n\t],\n\tinvalid2: [\n\t\t// Here 1,2,3 have to be in the third column of the middle/middle block\n\t\t// And 4,5,6 have to be in the first row of the middle/middle block\n\t\t// Since those two overlap this is an invalid sudoku\n\t\t[_, _, _, _, 1],\n\t\t[_, _, _, _, 2],\n\t\t[_, _, _, _, 3],\n\t\t[],\n\t\t[4, 5, 6],\n\t\t[_, _, _, _, _, _, 4, 5, 6],\n\t\t[_, _, _, 1],\n\t\t[_, _, _, 2],\n\t\t[_, _, _, 3],\n\t],\n} as const;\n\nclass App extends Component<Record<string, unknown>, AppState> {\n\t#sudokuClass = new Sudoku(sudokus.expert);\n\n\toverride state: AppState = {\n\t\tcells: this.#sudokuClass.getCells(),\n\t\terror: undefined,\n\t\tfocused: 0,\n\t};\n\n\tconstructor(...a: Array<Record<string, unknown>>) {\n\t\tsuper(...a);\n\n\t\tthis.#sudokuClass.subscribe((sudoku, type) => {\n\t\t\tswitch (type) {\n\t\t\t\tcase 'change': {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tcells: sudoku.getCells(),\n\t\t\t\t\t\terror: undefined,\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase 'finish': {\n\t\t\t\t\tconst isSolved = sudoku.isSolved();\n\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tcells: sudoku.getCells(),\n\t\t\t\t\t\terror: isSolved ? undefined : \"Sudoku wasn't solved completely.\",\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase 'error': {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\terror: 'Sudoku is invalid',\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdefault: {\n\t\t\t\t\t// Do nothing\n\t\t\t\t\t// Shouldn't be reachable\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\toverride componentDidMount = () => {\n\t\tdocument.addEventListener('keydown', this.handleKeyDown);\n\t};\n\n\toverride componentWillUnmount = () => {\n\t\tdocument.removeEventListener('keydown', this.handleKeyDown);\n\t};\n\n\trender = () => {\n\t\tconst {cells, error, focused} = this.state;\n\n\t\treturn (\n\t\t\t<div class=\"App\">\n\t\t\t\t<div class=\"sudoku\">\n\t\t\t\t\t{cells.map(({content, key, valid}, index) => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\tclass={`cell${valid ? '' : ' invalid-input'}${\n\t\t\t\t\t\t\t\tfocused === index ? ' focused-cell' : ''\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\tdata-index={index}\n\t\t\t\t\t\t\tonMouseDown={this.handleCellClick(index)}\n\t\t\t\t\t\t\tonTouchStart={event_ => {\n\t\t\t\t\t\t\t\t// If this fires preventDefault because otherwise onMouseDown will fire a bit later\n\t\t\t\t\t\t\t\t// and cause some flickering if onTouchStart, onTouchStart, onMouseDown, onMouseDown (in that order) fires\n\t\t\t\t\t\t\t\t// if the user switches between cells too quickly\n\t\t\t\t\t\t\t\tevent_.preventDefault();\n\t\t\t\t\t\t\t\tthis.handleCellClick(index)();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{content}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t{typeof error !== undefined && <div class=\"error\">{error}</div>}\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\ttitle=\"Solve sudoku\"\n\t\t\t\t\tclass=\"solve\"\n\t\t\t\t\tonClick={this.solve}\n\t\t\t\t>\n\t\t\t\t\tSolve\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\ttitle=\"Clear sudoku\"\n\t\t\t\t\tclass=\"clear\"\n\t\t\t\t\tonClick={this.clear}\n\t\t\t\t>\n\t\t\t\t\tClear\n\t\t\t\t</button>\n\t\t\t\t<div class=\"keyboardless-inputs\">\n\t\t\t\t\t{Array.from({length: 9}, (_v, index) => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tclass=\"keyboardless-input\"\n\t\t\t\t\t\t\ttitle={`${index + 1}`}\n\t\t\t\t\t\t\tonClick={this.handleKeyboardlessClick(`${index + 1}`)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{index + 1}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"keyboardless-input input-eraser\"\n\t\t\t\t\t\ttitle=\"Clear cell\"\n\t\t\t\t\t\tonClick={this.handleKeyboardlessClick(' ')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SvgEraser />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tsolve = () => {\n\t\tthis.#sudokuClass.solve();\n\t};\n\n\tclear = () => {\n\t\tthis.#sudokuClass.clearAllCells();\n\t};\n\n\thandleCellClick = (index: number) => (): void => {\n\t\tthis.setState({\n\t\t\tfocused: index,\n\t\t});\n\t};\n\n\thandleKeyDown = (event_: KeyboardEvent) => {\n\t\tthis.setState(\n\t\t\tproduce((state: AppState): void => {\n\t\t\t\tconst key = event_.key.toLowerCase();\n\n\t\t\t\tswitch (key) {\n\t\t\t\t\tcase 'arrowdown':\n\t\t\t\t\tcase 'arrowup': {\n\t\t\t\t\t\t// Wrapping around seems better\n\n\t\t\t\t\t\tconst direction = key === 'arrowdown' ? 9 : -9;\n\t\t\t\t\t\tlet newFocused = state.focused + direction;\n\n\t\t\t\t\t\tif (newFocused < 0) {\n\t\t\t\t\t\t\tnewFocused += 81;\n\t\t\t\t\t\t} else if (newFocused > 80) {\n\t\t\t\t\t\t\tnewFocused -= 81;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.focused = newFocused;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase 'arrowright':\n\t\t\t\t\tcase 'arrowleft': {\n\t\t\t\t\t\tconst direction = key === 'arrowright' ? 1 : -1;\n\n\t\t\t\t\t\tconst col = (state.focused % 9) + direction;\n\n\t\t\t\t\t\tif (col < 0) {\n\t\t\t\t\t\t\tstate.focused += 8;\n\t\t\t\t\t\t} else if (col > 8) {\n\t\t\t\t\t\t\tstate.focused -= 8;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstate.focused += direction;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase ' ': {\n\t\t\t\t\t\t// Space\n\n\t\t\t\t\t\tthis.#sudokuClass.clearCell(state.focused);\n\n\t\t\t\t\t\tstate.focused = (state.focused + 1) % 81;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase 'tab': {\n\t\t\t\t\t\tevent_.preventDefault();\n\n\t\t\t\t\t\tconst {shiftKey} = event_;\n\n\t\t\t\t\t\tconst direction = shiftKey ? -1 : 1;\n\n\t\t\t\t\t\tstate.focused = (state.focused + direction + 81) % 81;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'backspace': {\n\t\t\t\t\t\tthis.#sudokuClass.clearCell(state.focused);\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tif (/^[1-9]$/.test(key)) {\n\t\t\t\t\t\t\tthis.#sudokuClass.setContent(state.focused, key);\n\n\t\t\t\t\t\t\tstate.focused = (state.focused + 1) % 81;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t};\n\n\thandleKeyboardlessClick = (number: string) => (): void => {\n\t\tif (number === ' ') {\n\t\t\tthis.#sudokuClass.clearCell(this.state.focused);\n\t\t} else {\n\t\t\tthis.#sudokuClass.setContent(this.state.focused, number);\n\n\t\t\tthis.setState(\n\t\t\t\tproduce((state: AppState) => {\n\t\t\t\t\tstate.focused = (state.focused + 1) % 81;\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t};\n}\n\nrender(<App />, document.body);\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t991: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmelusc_github_io\"] = self[\"webpackChunkmelusc_github_io\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [754], () => (__webpack_require__(547)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","slice","options","vnodeId","rerenderQueue","defer","prevDebounce","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","i","removeNode","node","parentNode","removeChild","createElement","type","children","key","ref","normalizedProps","arguments","length","call","defaultProps","createVNode","original","vnode","undefined","constructor","Fragment","Component","context","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","c","push","process","debounceRendering","queue","sort","a","b","some","component","commitQueue","oldVNode","oldDom","parentDom","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","oldChildrenLength","Array","isArray","reorderChildren","placeChild","unmount","applyRef","tmp","nextDom","sibDom","outer","appendChild","nextSibling","insertBefore","setStyle","style","value","setProperty","test","dom","name","oldValue","useCapture","o","cssText","replace","toLowerCase","_listeners","addEventListener","eventProxyCapture","eventProxy","removeEventListener","e","setAttribute","removeAttribute","event","newVNode","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","provider","componentContext","newType","contextType","prototype","render","doRender","sub","state","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","diffElementNodes","diffed","root","cb","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","is","data","childNodes","dangerouslySetInnerHTML","attributes","innerHTML","hydrate","diffProps","checked","current","parentVNode","skipRemove","r","componentWillUnmount","this","error","ctor","handled","getDerivedStateFromError","setState","componentDidCatch","update","callback","s","forceUpdate","Promise","then","bind","resolve","setTimeout","window","__PREACT_DEVTOOLS__","attachPreact","symbolProto","Symbol","symbolToString","toString","baseToString","array","iteratee","index","result","arrayMap","isSymbol","idCounter","prefix","id","emptyCellPossibles","Set","from","_v","Cell","content","possible","valid","setValidity","size","setContent","trim","clear","bitCount","n","getterFunctionNames","bitIndex","Math","log2","trunc","TypeError","genericHiddenPairsSolver","sudoku","getterFunctionName","anyChanged","structureIndex","structure","summary","Map","number","set","get","equalIndexes","equalIndex","numbers","Error","join","cell","hiddenPairs","genericNakedPairsSolver","entries","Number","equalKeys","indices","numberString","includes","has","delete","nakedPairs","clearSection","blockIndex","numberToRemove","pointingArrows","block","getBlock","blockRowIndex","blockColIndex","colSection","rowSection","getCol","getRow","inRangeIncl","low","high","isInteger","RangeError","Sudoku","_cells","Object","values","rowIndex","row","colIndex","rowIndex_","cellsIndividuallyValidByStructure","getContent","clearCell","getCell","clearAllCells","col","colOffset","rowOffset","floor","index_","getCells","solve","isValid","sudokuIsValid","plugin","console","next","subscribe","add","unsubscribe","_validateByStructure","keys","dict","found","amount","isSolved","SvgEraser","width","height","fill","class","viewBox","d","sudokus","easy","evil","expert","invalid1","invalid2","firstChild","cells","focused","super","handleKeyDown","map","onMouseDown","handleCellClick","onTouchStart","event_","preventDefault","title","onClick","handleKeyboardlessClick","direction","newFocused","shiftKey","body","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","definition","defineProperty","enumerable","prop","hasOwnProperty","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}