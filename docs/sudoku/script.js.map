{"version":3,"file":"sudoku/script.js","mappings":"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","sources":["webpack://melusc.github.io/webpack/bootstrap","webpack://melusc.github.io/webpack/runtime/define property getters","webpack://melusc.github.io/webpack/runtime/hasOwnProperty shorthand","webpack://melusc.github.io/webpack/runtime/make namespace object","webpack://melusc.github.io/../src/constants.js","webpack://melusc.github.io/../src/util.js","webpack://melusc.github.io/../src/options.js","webpack://melusc.github.io/../src/create-element.js","webpack://melusc.github.io/../src/component.js","webpack://melusc.github.io/../src/diff/children.js","webpack://melusc.github.io/../src/diff/props.js","webpack://melusc.github.io/../src/diff/index.js","webpack://melusc.github.io/../src/utils/errors.ts","webpack://melusc.github.io/../src/utils/common.ts","webpack://melusc.github.io/../src/utils/plugins.ts","webpack://melusc.github.io/../src/core/scope.ts","webpack://melusc.github.io/../src/core/finalize.ts","webpack://melusc.github.io/../src/core/proxy.ts","webpack://melusc.github.io/../src/core/immerClass.ts","webpack://melusc.github.io/../src/core/current.ts","webpack://melusc.github.io/../src/diff/catch-error.js","webpack://melusc.github.io/../src/devtools.js","webpack://melusc.github.io/../src/immer.ts","webpack://melusc.github.io/../src/utils/env.ts","webpack://melusc.github.io/./node_modules/lodash-es/_freeGlobal.js","webpack://melusc.github.io/./node_modules/lodash-es/_root.js","webpack://melusc.github.io/./node_modules/lodash-es/_Symbol.js","webpack://melusc.github.io/./node_modules/lodash-es/isArray.js","webpack://melusc.github.io/./node_modules/lodash-es/_getRawTag.js","webpack://melusc.github.io/./node_modules/lodash-es/_objectToString.js","webpack://melusc.github.io/./node_modules/lodash-es/_baseGetTag.js","webpack://melusc.github.io/./node_modules/lodash-es/_baseToString.js","webpack://melusc.github.io/./node_modules/lodash-es/_arrayMap.js","webpack://melusc.github.io/./node_modules/lodash-es/isSymbol.js","webpack://melusc.github.io/./node_modules/lodash-es/isObjectLike.js","webpack://melusc.github.io/./node_modules/lodash-es/uniqueId.js","webpack://melusc.github.io/./src/sudoku/cell.ts","webpack://melusc.github.io/./node_modules/lodash-es/toString.js","webpack://melusc.github.io/./src/sudoku/plugins/shared.ts","webpack://melusc.github.io/./src/sudoku/plugins/hidden-pairs.ts","webpack://melusc.github.io/./src/sudoku/plugins/naked-pairs.ts","webpack://melusc.github.io/./src/sudoku/plugins/pointing-arrows.ts","webpack://melusc.github.io/./src/sudoku/sudoku.ts","webpack://melusc.github.io/./src/sudoku/script.tsx","webpack://melusc.github.io/../src/render.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\tif (options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children != null && // Can be null if childVNode suspended\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t// there are probably some internal data structures that aren't\n\t\t\t// updated properly.\n\t\t\t//\n\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t// value check in `diff()` won't be skipped.\n\t\t\tif (!isHydrating && newParentVNode.type === 'option') {\n\t\t\t\t// @ts-ignore We have validated that the type of parentDOM is 'option'\n\t\t\t\t// in the above check\n\t\t\t\tparentDom.value = '';\n\t\t\t} else if (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\tfor (let tmp = 0; tmp < childVNode._children.length; tmp++) {\n\t\tlet vnode = childVNode._children[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tchildVNode._children,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink[H:h]/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t(child === dom ||\n\t\t\t\t\t(nodeType ? child.localName == nodeType : child.nodeType == 3))\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value || (nodeType === 'progress' && !i))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(r[i], parentVNode, typeof vnode.type != 'function');\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) removeNode(vnode._dom);\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t},\n\t24: \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.map(s => `'${s}'`).join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtype,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nconst objectCtorString = Object.prototype.constructor.toString()\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\tif (proto === null) {\n\t\treturn true\n\t}\n\tconst Ctor =\n\t\tObject.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n\n\tif (Ctor === Object) return true\n\n\treturn (\n\t\ttypeof Ctor == \"function\" &&\n\t\tFunction.toString.call(Ctor) === objectCtorString\n\t)\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === Archtype.Object) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): Archtype {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? Archtype.Array\n\t\t: isMap(thing)\n\t\t? Archtype.Map\n\t\t: isSet(thing)\n\t\t? Archtype.Set\n\t\t: Archtype.Object\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === Archtype.Map\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === Archtype.Map ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === Archtype.Map) thing.set(propOrOldValue, value)\n\telse if (t === Archtype.Set) {\n\t\tthing.delete(propOrOldValue)\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyType,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\trootState: ImmerState,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(18, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: ProxyType.ES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: ProxyType.ES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: ProxyType.Map\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: ProxyType.Set\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyType,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyType.ProxyObject ||\n\t\tstate.type_ === ProxyType.ProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyType,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE],\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumarable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyType.ES5Object || state.type_ === ProxyType.ES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// Although the original test case doesn't seem valid anyway, so if this in the way we can turn the next line\n\t\t// back to each(result, ....)\n\t\teach(\n\t\t\tstate.type_ === ProxyType.Set ? new Set(result) : result,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyType.Set && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\tif (scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyType\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyType.ProxyArray : (ProxyType.ProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existing to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\n\t\tif (\n\t\t\tstate.copy_![prop] === value &&\n\t\t\t// special case: NaN\n\t\t\ttypeof value !== \"number\" &&\n\t\t\t// special case: handle new props with value 'undefined'\n\t\t\t(value !== undefined || prop in state.copy_)\n\t\t)\n\t\t\treturn true\n\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyType.ProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\treturn objectTraps.deleteProperty!.call(this, state[0], prop)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = true\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce: IProduce = (base: any, recipe?: any, patchListener?: any) => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === NOTHING) return undefined\n\t\t\tif (result === undefined) result = base\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches: IProduceWithPatches = (\n\t\targ1: any,\n\t\targ2?: any,\n\t\targ3?: any\n\t): any => {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst nextState = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [nextState, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches<T extends Objectish>(base: T, patches: Patch[]): T {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches) as any\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches.slice(i + 1))\n\t\t) as any\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtype,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === Archtype.Set ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase Archtype.Map:\n\t\t\treturn new Map(value)\n\t\tcase Archtype.Set:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options, Fragment, Component } from 'preact';\n\nexport function initDevTools() {\n\tif (typeof window != 'undefined' && window.__PREACT_DEVTOOLS__) {\n\t\twindow.__PREACT_DEVTOOLS__.attachPreact('10.5.14', options, {\n\t\t\tFragment,\n\t\t\tComponent\n\t\t});\n\t}\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n","// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol.for(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import toString from './toString.js';\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nexport default uniqueId;\n","import {uniqueId} from 'lodash';\n\nimport type {CellInterface} from './sudoku.d';\n\nconst emptyCellPossibles = (): Set<string> =>\n\tnew Set(Array.from({length: 9}, (_v, index) => `${index + 1}`));\n\nexport class Cell implements CellInterface {\n\tcontent: string | undefined;\n\n\tpossible = emptyCellPossibles();\n\n\tkey = uniqueId('cell-');\n\n\tvalid = true;\n\n\tsetValidity = (): this => {\n\t\tthis.valid\n\t\t\t= typeof this.content === 'undefined'\n\t\t\t\t? this.possible.size > 0\n\t\t\t\t: /^[1-9]$/.test(this.content);\n\n\t\treturn this;\n\t};\n\n\tsetContent = (content: string): this => {\n\t\tcontent = content.trim();\n\n\t\tif (content) {\n\t\t\tthis.content = content.trim();\n\t\t\tthis.possible.clear();\n\t\t} else {\n\t\t\tthis.clear();\n\t\t}\n\n\t\treturn this.setValidity();\n\t};\n\n\tclear = (): this => {\n\t\tthis.content = undefined;\n\n\t\tthis.possible = emptyCellPossibles();\n\n\t\tthis.valid = true;\n\n\t\treturn this;\n\t};\n}\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","// Stolen shamelessly from\n// https://web.archive.org/web/20190223113747/https://stackoverflow.com/questions/43122082/efficiently-count-the-number-of-bits-in-an-integer-in-javascript#43122214\nexport const bitCount = (n: number): number => {\n\tn -= (n >> 1) & 0x55_55_55_55;\n\tn = (n & 0x33_33_33_33) + ((n >> 2) & 0x33_33_33_33);\n\treturn (((n + (n >> 4)) & 0xF_0F_0F_0F) * 0x1_01_01_01) >> 24;\n};\n\nexport const getterFunctionNames = ['getRow', 'getCol', 'getBlock'] as const;\n\nexport const bitIndex = (n: number): number => {\n\tconst index = Math.log2(n);\n\n\tif (index !== Math.trunc(index)) {\n\t\tthrow new TypeError(`${n} doesn't have exactly one bit.`);\n\t}\n\n\treturn index;\n};\n","/*\n * See https://web.archive.org/web/20210331174704/https://bestofsudoku.com/sudoku-strategy\n */\n\nimport type {SudokuInterface} from '../sudoku.d';\nimport {bitCount, getterFunctionNames} from './shared';\n\nconst genericHiddenPairsSolver = (\n\tsudoku: SudokuInterface,\n\tgetterFunctionName: 'getCol' | 'getRow' | 'getBlock',\n): boolean => {\n\tlet anyChanged = false;\n\n\tfor (let structureIndex = 0; structureIndex < 9; ++structureIndex) {\n\t\tconst structure = sudoku[getterFunctionName](structureIndex);\n\n\t\t// Getting all the indexes of a number\n\t\t// works like this:\n\t\t// If 7 is in cells (0, 4, 6)\n\t\t// the resulting value will be \"1010001\"\n\t\t//                                    ^ for 0\n\t\t//                                ^ for 4\n\t\t//                              ^ for 6\n\t\t// Iterating through each cell and\n\t\t// doing `currentValue | 2 ** index`\n\t\t// This is a lot better than comparing arrays of indexes\n\t\tconst summary = new Map<string, number>();\n\n\t\tfor (let index = 0; index < 9; ++index) {\n\t\t\tconst {content, possible} = structure[index]!; // It's [0,8]\n\n\t\t\tif (content === undefined) {\n\t\t\t\tfor (const number of possible) {\n\t\t\t\t\tsummary.set(number, (summary.get(number) ?? 0) | (2 ** index));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/*\n          This part fixes a bug:\n          [\n            {1,2,3}, // these are possibles\n            {1,2},\n            3, // this is filled in that cell\n            ...\n          ]\n          Webpack doesn't keep the same order as is exported from plugins.ts\n          (and the plugins shouldn't rely on it).\n          When remove-duplicates (now naked-pairs) doesn't run first, the scenarios above can occur\n          where hidden-pairs finds the only cell that has 3 in #possible and then removes all others\n          (here cell at index 0), incorrectly resulting in two cells with 3\n        */\n\n\t\t\t\tsummary.set(content, (summary.get(content) ?? 0) | (2 ** index));\n\t\t\t}\n\t\t}\n\n\t\tconst equalIndexes = new Map<number, string[]>();\n\n\t\tfor (const [number, key] of summary) {\n\t\t\tif (bitCount(key) > 8) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet equalIndex = equalIndexes.get(key);\n\n\t\t\tif (!equalIndex) {\n\t\t\t\tequalIndex = [];\n\t\t\t\tequalIndexes.set(key, equalIndex);\n\t\t\t}\n\n\t\t\tequalIndex.push(number);\n\t\t}\n\n\t\tfor (const [key, numbers] of equalIndexes) {\n\t\t\tif (bitCount(key) < numbers.length) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`bitCount was smaller than allowed: ${key.toString(\n\t\t\t\t\t\t2,\n\t\t\t\t\t)}; ${numbers.join(',')}`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (bitCount(key) > numbers.length) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (let index = 0; index <= Math.log2(key); ++index) {\n\t\t\t\tif ((key & (2 ** index)) === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst cell = structure[index]!; // It's certainly [0,8]\n\n\t\t\t\tif (cell.possible.size > numbers.length) {\n\t\t\t\t\tanyChanged = true;\n\n\t\t\t\t\tcell.possible = new Set(numbers);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn anyChanged;\n};\n\nexport const hiddenPairs = (sudoku: SudokuInterface): boolean => {\n\tlet anyChanged = false;\n\n\tfor (const key of getterFunctionNames) {\n\t\tanyChanged = genericHiddenPairsSolver(sudoku, key) || anyChanged;\n\t}\n\n\treturn anyChanged;\n};\n","/*\n * See https://web.archive.org/web/20210331174704/https://bestofsudoku.com/sudoku-strategy\n */\n\nimport type {SudokuInterface} from '../sudoku.d';\nimport {bitCount, getterFunctionNames} from './shared';\n\nconst genericNakedPairsSolver = (\n\tsudoku: SudokuInterface,\n\tgetterFunctionName: 'getCol' | 'getRow' | 'getBlock',\n): boolean => {\n\tlet anyChanged = false;\n\n\tfor (let structureIndex = 0; structureIndex < 9; ++structureIndex) {\n\t\tconst structure = sudoku[getterFunctionName](structureIndex);\n\n\t\tconst summary = new Map<number, number>();\n\n\t\tfor (const [index, cell] of structure.entries()) {\n\t\t\tif (cell.content === undefined) {\n\t\t\t\tlet key = 0;\n\t\t\t\tfor (const number of cell.possible) {\n\t\t\t\t\tkey |= 2 ** (Number(number) - 1);\n\t\t\t\t}\n\n\t\t\t\tsummary.set(index, key);\n\t\t\t} else {\n\t\t\t\tsummary.set(\n\t\t\t\t\tindex,\n\t\t\t\t\t(summary.get(index) ?? 0) | (2 ** (Number(cell.content) - 1)),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst equalKeys = new Map<number, number[]>();\n\t\tfor (const [index, key] of summary) {\n\t\t\tlet array = equalKeys.get(key);\n\n\t\t\tif (!array) {\n\t\t\t\tarray = [];\n\t\t\t\tequalKeys.set(key, array);\n\t\t\t}\n\n\t\t\tarray.push(index);\n\t\t}\n\n\t\tfor (const [key, indices] of equalKeys) {\n\t\t\tif (bitCount(key) !== indices.length || indices.length > 8) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (let number = 0; number <= Math.log2(key); ++number) {\n\t\t\t\tif ((key & (2 ** number)) === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst numberString = `${number + 1}`;\n\n\t\t\t\tfor (const [index, cell] of structure.entries()) {\n\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\tif (!indices.includes(index) && cell.possible.has(numberString)) {\n\t\t\t\t\t\tanyChanged = true;\n\n\t\t\t\t\t\tcell.possible.delete(numberString);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn anyChanged;\n};\n\nexport const nakedPairs = (sudoku: SudokuInterface): boolean => {\n\tlet anyChanged = false;\n\n\tfor (const key of getterFunctionNames) {\n\t\tanyChanged = genericNakedPairsSolver(sudoku, key) || anyChanged;\n\t}\n\n\treturn anyChanged;\n};\n","import type {SudokuInterface, CellInterface} from '../sudoku.d';\nimport {bitCount, bitIndex} from './shared';\n\nconst clearSection = (\n\tstructure: CellInterface[],\n\tblockIndex: number,\n\tnumberToRemove: string,\n): boolean => {\n\tlet anyChanged = false;\n\n\tfor (const [index, cell] of structure.entries()) {\n\t\tif (index >= blockIndex && index < blockIndex + 3) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (cell.possible.has(numberToRemove)) {\n\t\t\tanyChanged = true;\n\n\t\t\tcell.possible.delete(numberToRemove);\n\t\t}\n\t}\n\n\treturn anyChanged;\n};\n\nexport const pointingArrows = (sudoku: SudokuInterface): boolean => {\n\tlet anyChanged = false;\n\n\tfor (let blockIndex = 0; blockIndex < 9; ++blockIndex) {\n\t\tconst block = sudoku.getBlock(blockIndex);\n\t\tconst blockRowIndex = Math.trunc(blockIndex / 3) * 3;\n\t\tconst blockColIndex = (blockIndex % 3) * 3;\n\n\t\t/*\n      The first three bits are for cols\n      The last three are for rows\n\n      If one of the sections has only one bit,\n      that is a pointing arrow\n    */\n\t\tconst summary = new Map<string, number>();\n\n\t\tfor (const [index, {content, possible}] of block.entries()) {\n\t\t\tconst row = Math.trunc(index / 3);\n\t\t\tconst col = index % 3;\n\n\t\t\tconst key = (2 ** col) | (2 ** (row + 3));\n\n\t\t\tif (content === undefined) {\n\t\t\t\tfor (const number of possible) {\n\t\t\t\t\tsummary.set(number, (summary.get(number) ?? 0) | key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsummary.set(content, (summary.get(content) ?? 0) | key);\n\t\t\t}\n\t\t}\n\n\t\tfor (const [number, key] of summary) {\n\t\t\tconst colSection = key & 0b111; // & 7\n\t\t\tconst rowSection = (key >> 3) & 0b111;\n\n\t\t\tif (bitCount(colSection) === 1 && bitCount(rowSection) > 1) {\n\t\t\t\tanyChanged\n\t\t\t\t\t= clearSection(\n\t\t\t\t\t\tsudoku.getCol(blockColIndex + bitIndex(colSection)),\n\t\t\t\t\t\tblockRowIndex,\n\t\t\t\t\t\tnumber,\n\t\t\t\t\t) || anyChanged;\n\t\t\t} else if (bitCount(rowSection) === 1 && bitCount(colSection) > 1) {\n\t\t\t\tanyChanged\n\t\t\t\t\t= clearSection(\n\t\t\t\t\t\tsudoku.getRow(blockRowIndex + bitIndex(rowSection)),\n\t\t\t\t\t\tblockColIndex,\n\t\t\t\t\t\tnumber,\n\t\t\t\t\t) || anyChanged;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn anyChanged;\n};\n","import {ReadonlyDeep} from 'type-fest';\nimport type {\n\tCells,\n\tCellInterface,\n\tSudokuInterface,\n\tSubscriptionCallback,\n\tDispatchTypes,\n\tNumberOnlySudoku,\n} from './sudoku.d';\n\nimport {Cell} from './cell';\nimport * as plugins from './plugins/plugins';\n\nexport const inRangeIncl = (low: number, high: number, n: number): void => {\n\tif (!Number.isInteger(n)) {\n\t\tthrow new TypeError(`${n} was not an integer.`);\n\t}\n\n\tif (n < low || n > high) {\n\t\tthrow new RangeError(`${n} ∉ [${low}, ${high}].`);\n\t}\n};\n\nexport class Sudoku implements SudokuInterface {\n\t_cells: Cells;\n\n\t#subscriptions: Set<SubscriptionCallback> = new Set();\n\n\t#plugins = Object.values(plugins);\n\n\tconstructor(array?: ReadonlyDeep<NumberOnlySudoku>) {\n\t\tthis._cells = Array.from({length: 81}, () => new Cell());\n\n\t\tif (array) {\n\t\t\tfor (const [rowIndex, row] of array.entries()) {\n\t\t\t\tfor (const [colIndex, cell] of row.entries()) {\n\t\t\t\t\tif (typeof cell === 'number') {\n\t\t\t\t\t\tconst rowIndex_ = rowIndex * 9; // Because of prettier and eslint's no-mixed-operators\n\n\t\t\t\t\t\tthis.setContent(rowIndex_ + colIndex, `${cell}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tsetContent = (index: number, content: string): this => {\n\t\tinRangeIncl(0, 80, index);\n\n\t\tconst cell = this._cells[index]!; // It's [0,80]\n\n\t\tcell.setContent(content);\n\n\t\tthis.cellsIndividuallyValidByStructure();\n\n\t\treturn this.#dispatch('change');\n\t};\n\n\tgetContent = (index: number): string | undefined => {\n\t\tinRangeIncl(0, 80, index);\n\n\t\t// It's [0,80]\n\t\treturn this._cells[index]!.content;\n\t};\n\n\tclearCell = (index: number): this => {\n\t\tthis.getCell(index).clear(); // Validate index there\n\n\t\tthis.cellsIndividuallyValidByStructure();\n\n\t\treturn this.#dispatch('change');\n\t};\n\n\tclearAllCells = (): this => {\n\t\tfor (const cell of this._cells) {\n\t\t\tcell.clear();\n\t\t}\n\n\t\treturn this.#dispatch('change');\n\t};\n\n\tgetCol = (col: number): CellInterface[] => {\n\t\tinRangeIncl(0, 8, col);\n\n\t\tconst result: CellInterface[] = [];\n\n\t\tfor (let index = col; index < 81; index += 9) {\n\t\t\tresult.push(this._cells[index]!);\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tgetRow = (row: number): CellInterface[] => {\n\t\tinRangeIncl(0, 8, row);\n\n\t\trow *= 9;\n\n\t\treturn this._cells.slice(row, row + 9);\n\t};\n\n\tgetBlock = (index: number): CellInterface[] => {\n\t\tinRangeIncl(0, 8, index);\n\n\t\tconst colOffset = (index % 3) * 3;\n\t\tconst rowOffset = Math.floor(index / 3) * 3;\n\n\t\tconst result = [];\n\n\t\tfor (let index_ = 0; index_ < 9; ++index_) {\n\t\t\tlet row = rowOffset + Math.floor(index_ / 3);\n\t\t\tconst col = colOffset + (index_ % 3);\n\n\t\t\trow *= 9;\n\n\t\t\tresult.push(this.getCell(row + col));\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tgetCell = (index: number): CellInterface => {\n\t\tinRangeIncl(0, 80, index);\n\n\t\treturn this._cells[index]!; // It's [0,80]\n\t};\n\n\tgetCells = (): Cells => [...this._cells];\n\n\tsolve = (): this => {\n\t\tif (this.isValid()) {\n\t\t\tfor (const cell of this._cells) {\n\t\t\t\tif (cell.content === undefined) {\n\t\t\t\t\tcell.clear(); // Reset possibles\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet anyChanged = false;\n\t\t\tlet sudokuIsValid = true;\n\n\t\t\tdo {\n\t\t\t\tanyChanged = false;\n\n\t\t\t\tfor (const plugin of this.#plugins) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tanyChanged = plugin(this) || anyChanged;\n\t\t\t\t\t} catch (error: unknown) {\n\t\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\t\tif (process.env['NODE_ENV'] !== 'AVA_TESTING') {\n\t\t\t\t\t\t\tconsole.error(error, this._cells);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsudokuIsValid = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (const [index, cell] of this._cells.entries()) {\n\t\t\t\t\tif (cell.content === undefined) {\n\t\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\t\tif (cell.possible.size === 1) {\n\t\t\t\t\t\t\t// We know that the set has one item\n\t\t\t\t\t\t\tcell.setContent(cell.possible.values().next().value as string);\n\t\t\t\t\t\t} else if (cell.possible.size === 0) {\n\t\t\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\t\t\tif (process.env['NODE_ENV'] !== 'AVA_TESTING') {\n\t\t\t\t\t\t\t\tconsole.error('cell.possible.size === 0', [index, cell]);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsudokuIsValid = false;\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsudokuIsValid &&= this.isValid();\n\t\t\t} while (anyChanged && sudokuIsValid);\n\n\t\t\tthis.#dispatch(sudokuIsValid ? 'finish' : 'error');\n\t\t} else {\n\t\t\tthis.#dispatch('error');\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tsubscribe = (callback: SubscriptionCallback): this => {\n\t\tthis.#subscriptions.add(callback);\n\n\t\treturn this;\n\t};\n\n\tunsubscribe = (callback: SubscriptionCallback): this => {\n\t\tthis.#subscriptions.delete(callback);\n\n\t\treturn this;\n\t};\n\n\t#dispatch = (type: DispatchTypes): this => {\n\t\tfor (const callback of this.#subscriptions) {\n\t\t\tcallback(this, type);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tcellsIndividuallyValidByStructure = (): boolean => {\n\t\tfor (const cell of this._cells) {\n\t\t\tcell.setValidity();\n\t\t}\n\n\t\tfor (let index = 0; index < 9; ++index) {\n\t\t\tfor (const structure of [\n\t\t\t\tthis.getCol(index),\n\t\t\t\tthis.getRow(index),\n\t\t\t\tthis.getBlock(index),\n\t\t\t]) {\n\t\t\t\tthis._validateByStructure(structure);\n\t\t\t}\n\t\t}\n\n\t\tfor (const [index, cell] of this._cells.entries()) {\n\t\t\tif (!cell.valid) {\n\t\t\t\tif (process.env['NODE_ENV'] !== 'AVA_TESTING') {\n\t\t\t\t\tconsole.error('cell was not valid', [index, cell]);\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tisValid = (): boolean => {\n\t\tconst keys = ['getRow', 'getBlock', 'getCol'] as const;\n\n\t\tfor (const key of keys) {\n\t\t\tfor (let index = 0; index < 9; ++index) {\n\t\t\t\tconst structure = this[key](index);\n\n\t\t\t\tconst dict = new Map<string, number>();\n\n\t\t\t\tfor (const cell of structure) {\n\t\t\t\t\tif (cell.content === undefined) {\n\t\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\t\tfor (const possible of cell.possible) {\n\t\t\t\t\t\t\tdict.set(possible, (dict.get(possible) ?? 0) + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdict.set(cell.content, (dict.get(cell.content) ?? 0) + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dict.size !== 9) {\n\t\t\t\t\tif (process.env['NODE_ENV'] !== 'AVA_TESTING') {\n\t\t\t\t\t\tconsole.error('dict.size !== 9', dict);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.cellsIndividuallyValidByStructure();\n\t};\n\n\t_validateByStructure = (structure: Cell[]): this => {\n\t\tconst found = new Map<string, number>();\n\t\tfor (const {content} of structure) {\n\t\t\tif (typeof content === 'string') {\n\t\t\t\tfound.set(content, (found.get(content) ?? 0) + 1);\n\t\t\t}\n\t\t}\n\n\t\tfor (const [key, amount] of found) {\n\t\t\tif (amount === 1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (const [index, cell] of structure.entries()) {\n\t\t\t\tif (cell.content === key) {\n\t\t\t\t\tif (process.env['NODE_ENV'] !== 'AVA_TESTING') {\n\t\t\t\t\t\tconsole.error('cell.content === key', [index, cell]);\n\t\t\t\t\t}\n\n\t\t\t\t\tcell.valid = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tisSolved = (): boolean => {\n\t\tif (!this.cellsIndividuallyValidByStructure()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (const cell of this._cells) {\n\t\t\tif (cell.content === undefined) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t};\n}\n","// eslint-disable-next-line import/no-unassigned-import\nimport 'preact/devtools';\n\nimport {render, h, Component} from 'preact';\nimport {produce} from 'immer';\n\nimport {Sudoku} from './sudoku';\nimport type {Cells} from './sudoku.d';\n\ninterface AppState {\n\tcells: Cells;\n\terror: undefined | string;\n\tfocused: number;\n}\n\nconst SvgEraser = () => (\n\t<svg\n\t\twidth=\"16\"\n\t\theight=\"16\"\n\t\tfill=\"currentColor\"\n\t\tclass=\"svg-eraser-fill\"\n\t\tviewBox=\"0 0 16 16\"\n\t>\n\t\t<path d=\"M8.086 2.207a2 2 0 0 1 2.828 0l3.879 3.879a2 2 0 0 1 0 2.828l-5.5 5.5A2 2 0 0 1 7.879 15H5.12a2 2 0 0 1-1.414-.586l-2.5-2.5a2 2 0 0 1 0-2.828l6.879-6.879zm.66 11.34L3.453 8.254 1.914 9.793a1 1 0 0 0 0 1.414l2.5 2.5a1 1 0 0 0 .707.293H7.88a1 1 0 0 0 .707-.293l.16-.16z\" />\n\t</svg>\n);\n\nconst _ = undefined; // Looks better, than loads of `undefined`\n\nconst sudokus = {\n\teasy: [\n\t\t[5, _, 3, _, 9, 4],\n\t\t[_, 9, _, _, 3, 6, 2, 5, 8],\n\t\t[_, _, _, _, _, _, 3],\n\t\t[_, _, 8, 9, 5, _, 6, 7],\n\t\t[],\n\t\t[_, 7, 2, _, 6, 1, 4],\n\t\t[_, _, 4],\n\t\t[6, 5, 9, 8, 2, _, _, 1],\n\t\t[_, _, _, 1, 4, _, 5, _, 6],\n\t],\n\tevil: [\n\t\t[6, _, 4, _, _, _, _, _, 3],\n\t\t[_, _, _, _, 3, 7, 8],\n\t\t[_, _, _, 5, _, _, 7],\n\t\t[8, 9, _, 1],\n\t\t[3, _, _, _, _, _, _, _, 2],\n\t\t[_, _, _, _, _, 3, _, 1, 9],\n\t\t[_, _, 5, _, _, 9],\n\t\t[_, _, 1, 8, 6],\n\t\t[9, _, _, _, _, _, 4, _, 8],\n\t],\n\texpert: [\n\t\t[_, _, _, _, _, 4, _, _, 2],\n\t\t[_, 6, _, 2, _, _, _, 3],\n\t\t[_, 8, _, _, _, 3, 5, _, 9],\n\t\t[_, 4, _, _, _, _, 1],\n\t\t[1, _, _, 7, _, 5],\n\t\t[5, _, 3],\n\t\t[_, 9, _, 3],\n\t\t[_, _, 4, _, 6, 1],\n\t\t[_, _, 5, _, _, _, 7],\n\t],\n\tinvalid1: [\n\t\t// Here both 5 and 6 would have to be in the middle/middle cell\n\t\t// which is not possible, since only one number can be in each cell\n\t\t[],\n\t\t[_, _, _, 6],\n\t\t[_, _, _, 5],\n\t\t[_, _, _, _, _, _, 5, 6],\n\t\t[],\n\t\t[_, 6, 5],\n\t\t[_, _, _, _, _, 5],\n\t\t[_, _, _, _, _, 6],\n\t],\n\tinvalid2: [\n\t\t// Here 1,2,3 have to be in the third column of the middle/middle block\n\t\t// And 4,5,6 have to be in the first row of the middle/middle block\n\t\t// Since those two overlap this is an invalid sudoku\n\t\t[_, _, _, _, 1],\n\t\t[_, _, _, _, 2],\n\t\t[_, _, _, _, 3],\n\t\t[],\n\t\t[4, 5, 6],\n\t\t[_, _, _, _, _, _, 4, 5, 6],\n\t\t[_, _, _, 1],\n\t\t[_, _, _, 2],\n\t\t[_, _, _, 3],\n\t],\n} as const;\n\nclass App extends Component<Record<string, unknown>, AppState> {\n\t#sudokuClass = new Sudoku(sudokus.expert);\n\n\tstate: AppState = {\n\t\tcells: this.#sudokuClass.getCells(),\n\t\terror: undefined,\n\t\tfocused: 0,\n\t};\n\n\tconstructor(...a: Array<Record<string, unknown>>) {\n\t\tsuper(...a);\n\n\t\tthis.#sudokuClass.subscribe((sudoku, type) => {\n\t\t\tswitch (type) {\n\t\t\t\tcase 'change': {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tcells: sudoku.getCells(),\n\t\t\t\t\t\terror: undefined,\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase 'finish': {\n\t\t\t\t\tconst isSolved = sudoku.isSolved();\n\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tcells: sudoku.getCells(),\n\t\t\t\t\t\terror: isSolved ? undefined : \"Sudoku wasn't solved completely.\",\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase 'error': {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\terror: 'Sudoku is invalid',\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdefault: {\n\t\t\t\t\t// Do nothing\n\t\t\t\t\t// Shouldn't be reachable\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tcomponentDidMount = () => {\n\t\tdocument.addEventListener('keydown', this.handleKeyDown);\n\t};\n\n\tcomponentWillUnmount = () => {\n\t\tdocument.removeEventListener('keydown', this.handleKeyDown);\n\t};\n\n\trender = () => {\n\t\tconst {cells, error, focused} = this.state;\n\n\t\treturn (\n\t\t\t<div class=\"App\">\n\t\t\t\t<div class=\"sudoku\">\n\t\t\t\t\t{cells.map(({content, key, valid}, index) => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\tclass={`cell${valid ? '' : ' invalid-input'}${\n\t\t\t\t\t\t\t\tfocused === index ? ' focused-cell' : ''\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\tdata-index={index}\n\t\t\t\t\t\t\tonMouseDown={this.handleCellClick(index)}\n\t\t\t\t\t\t\tonTouchStart={event_ => {\n\t\t\t\t\t\t\t\t// If this fires preventDefault because otherwise onMouseDown will fire a bit later\n\t\t\t\t\t\t\t\t// and cause some flickering if onTouchStart, onTouchStart, onMouseDown, onMouseDown (in that order) fires\n\t\t\t\t\t\t\t\t// if the user switches between cells too quickly\n\t\t\t\t\t\t\t\tevent_.preventDefault();\n\t\t\t\t\t\t\t\tthis.handleCellClick(index)();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{content}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t{typeof error !== undefined && <div class=\"error\">{error}</div>}\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\ttitle=\"Solve sudoku\"\n\t\t\t\t\tclass=\"solve\"\n\t\t\t\t\tonClick={this.solve}\n\t\t\t\t>\n\t\t\t\t\tSolve\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\ttitle=\"Clear sudoku\"\n\t\t\t\t\tclass=\"clear\"\n\t\t\t\t\tonClick={this.clear}\n\t\t\t\t>\n\t\t\t\t\tClear\n\t\t\t\t</button>\n\t\t\t\t<div class=\"keyboardless-inputs\">\n\t\t\t\t\t{Array.from({length: 9}, (_v, index) => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tclass=\"keyboardless-input\"\n\t\t\t\t\t\t\ttitle={`${index + 1}`}\n\t\t\t\t\t\t\tonClick={this.handleKeyboardlessClick(`${index + 1}`)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{index + 1}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"keyboardless-input input-eraser\"\n\t\t\t\t\t\ttitle=\"Clear cell\"\n\t\t\t\t\t\tonClick={this.handleKeyboardlessClick(' ')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SvgEraser />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tsolve = () => {\n\t\tthis.#sudokuClass.solve();\n\t};\n\n\tclear = () => {\n\t\tthis.#sudokuClass.clearAllCells();\n\t};\n\n\thandleCellClick = (index: number) => (): void => {\n\t\tthis.setState({\n\t\t\tfocused: index,\n\t\t});\n\t};\n\n\thandleKeyDown = (event_: KeyboardEvent) => {\n\t\tthis.setState(\n\t\t\tproduce((state: AppState): void => {\n\t\t\t\tconst key = event_.key.toLowerCase();\n\n\t\t\t\tswitch (key) {\n\t\t\t\t\tcase 'arrowdown':\n\t\t\t\t\tcase 'arrowup': {\n\t\t\t\t\t\t// Wrapping around seems better\n\n\t\t\t\t\t\tconst direction = key === 'arrowdown' ? 9 : -9;\n\t\t\t\t\t\tlet newFocused = state.focused + direction;\n\n\t\t\t\t\t\tif (newFocused < 0) {\n\t\t\t\t\t\t\tnewFocused += 81;\n\t\t\t\t\t\t} else if (newFocused > 80) {\n\t\t\t\t\t\t\tnewFocused -= 81;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.focused = newFocused;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase 'arrowright':\n\t\t\t\t\tcase 'arrowleft': {\n\t\t\t\t\t\tconst direction = key === 'arrowright' ? 1 : -1;\n\n\t\t\t\t\t\tconst col = (state.focused % 9) + direction;\n\n\t\t\t\t\t\tif (col < 0) {\n\t\t\t\t\t\t\tstate.focused += 8;\n\t\t\t\t\t\t} else if (col > 8) {\n\t\t\t\t\t\t\tstate.focused -= 8;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstate.focused += direction;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase ' ': {\n\t\t\t\t\t\t// Space\n\n\t\t\t\t\t\tthis.#sudokuClass.clearCell(state.focused);\n\n\t\t\t\t\t\tstate.focused = (state.focused + 1) % 81;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase 'tab': {\n\t\t\t\t\t\tevent_.preventDefault();\n\n\t\t\t\t\t\tconst {shiftKey} = event_;\n\n\t\t\t\t\t\tconst direction = shiftKey ? -1 : 1;\n\n\t\t\t\t\t\tstate.focused = (state.focused + direction + 81) % 81;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'backspace': {\n\t\t\t\t\t\tthis.#sudokuClass.clearCell(state.focused);\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tif (/^[1-9]$/.test(key)) {\n\t\t\t\t\t\t\tthis.#sudokuClass.setContent(state.focused, key);\n\n\t\t\t\t\t\t\tstate.focused = (state.focused + 1) % 81;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t};\n\n\thandleKeyboardlessClick = (number: string) => (): void => {\n\t\tif (number === ' ') {\n\t\t\tthis.#sudokuClass.clearCell(this.state.focused);\n\t\t} else {\n\t\t\tthis.#sudokuClass.setContent(this.state.focused, number);\n\n\t\t\tthis.setState(\n\t\t\t\tproduce((state: AppState) => {\n\t\t\t\t\tstate.focused = (state.focused + 1) % 81;\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t};\n}\n\nrender(<App />, document.body);\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","slice","options","vnodeId","rerenderQueue","defer","prevDebounce","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","props","i","removeNode","node","parentNode","removeChild","createElement","type","children","ref","normalizedProps","arguments","length","defaultProps","createVNode","original","vnode","undefined","constructor","Fragment","Component","context","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","c","push","process","debounceRendering","queue","sort","a","b","some","component","commitQueue","oldVNode","oldDom","parentDom","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","oldChildrenLength","Array","isArray","reorderChildren","placeChild","unmount","applyRef","tmp","nextDom","sibDom","outer","appendChild","nextSibling","insertBefore","setStyle","style","setProperty","test","dom","name","oldValue","useCapture","cssText","replace","toLowerCase","_listeners","addEventListener","eventProxyCapture","eventProxy","removeEventListener","e","setAttribute","removeAttribute","event","newVNode","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","provider","componentContext","newType","contextType","render","doRender","sub","state","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","diffElementNodes","diffed","root","cb","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","is","data","childNodes","dangerouslySetInnerHTML","attributes","innerHTML","hydrate","diffProps","checked","current","parentVNode","skipRemove","r","componentWillUnmount","this","die","error","args","msg","Error","map","s","join","isDraft","DRAFT_STATE","isDraftable","proto","getPrototypeOf","Ctor","Function","toString","objectCtorString","DRAFTABLE","isMap","isSet","each","iter","enumerableOnly","getArchtype","keys","ownKeys","entry","index","thing","type_","has","set","propOrOldValue","t","delete","add","y","target","hasMap","Map","hasSet","Set","latest","copy_","base_","shallowCopy","descriptors","getOwnPropertyDescriptors","desc","writable","configurable","create","freeze","deep","isFrozen","clear","dontMutateFrozenCollections","getPlugin","pluginKey","plugin","plugins","getCurrentScope","currentScope","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer","immer_","canAutoFreeze_","unfinalizedDrafts_","draft","revoke_","revoked_","processResult","result","baseDraft","isReplaced","useProxies_","willFinalizeES5_","modified_","finalize","maybeFreeze","generateReplacementPatches_","NOTHING","rootScope","path","childValue","finalizeProperty","scope_","finalized_","draft_","generatePatches_","parentState","targetObject","rootPath","res","assigned_","concat","autoFreeze_","peek","getDescriptorFromProto","source","getOwnPropertyDescriptor","markChanged","prepareCopy","createProxy","parent","proxyMap_","proxySet_","isManual_","traps","objectTraps","arrayTraps","Proxy","revocable","revoke","proxy","createES5Proxy_","copyHelper","archType","from","ctor","handled","getDerivedStateFromError","setState","componentDidCatch","update","callback","forceUpdate","Promise","then","bind","resolve","setTimeout","window","__PREACT_DEVTOOLS__","attachPreact","hasSymbol","hasProxies","Reflect","for","iterator","getOwnPropertySymbols","getOwnPropertyNames","currentState","x","deleteProperty","owner","setPrototypeOf","fn","apply","config","recipe","defaultBase","self","_this","produce","_this2","hasError","arg1","arg2","produceWithPatches","p","ip","patches","inversePatches","useProxies","setUseProxies","autoFreeze","setAutoFreeze","createDraft","currentImpl","copy","hasChanges_","finishDraft","applyPatches","patch","op","applyPatchesImpl","applyPatches_","global","freeSelf","freeGlobal","objectProto","nativeObjectToString","symToStringTag","symbolProto","symbolToString","baseToString","array","iteratee","arrayMap","isObjectLike","isOwn","tag","unmasked","getRawTag","objectToString","baseGetTag","isSymbol","idCounter","emptyCellPossibles","_v","Cell","prefix","id","valid","content","possible","size","trim","setValidity","bitCount","n","getterFunctionNames","bitIndex","Math","log2","trunc","TypeError","genericHiddenPairsSolver","sudoku","getterFunctionName","anyChanged","structureIndex","structure","summary","number","equalIndexes","equalIndex","numbers","cell","hiddenPairs","genericNakedPairsSolver","entries","Number","equalKeys","indices","numberString","includes","nakedPairs","clearSection","blockIndex","numberToRemove","pointingArrows","block","getBlock","blockRowIndex","blockColIndex","colSection","rowSection","getCol","getRow","inRangeIncl","low","high","isInteger","RangeError","Sudoku","values","_cells","rowIndex","row","colIndex","rowIndex_","setContent","cellsIndividuallyValidByStructure","getCell","col","colOffset","rowOffset","floor","index_","isValid","sudokuIsValid","console","next","_validateByStructure","dict","found","amount","SvgEraser","width","height","fill","class","viewBox","d","sudokus","easy","evil","expert","invalid1","invalid2","firstChild","cells","getCells","focused","super","subscribe","isSolved","handleKeyDown","onMouseDown","handleCellClick","onTouchStart","event_","preventDefault","title","onClick","solve","handleKeyboardlessClick","clearAllCells","direction","newFocused","clearCell","shiftKey","body"],"sourceRoot":""}