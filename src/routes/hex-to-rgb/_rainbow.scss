@use 'vars' as *;
@use 'sass:list';

@function reverse($list) {
	$result: ();

	@for $i from -(list.length($list)) through -1 {
		$result: list.append($result, list.nth($list, -$i));
	}

	@return $result;
}

@function pop($list) {
	$result: ();

	@for $i from 1 through list.length($list) - 1 {
		$result: list.append($result, list.nth($list, $i));
	}

	@return $result;
}

$bg-width: 500px;
$height: 28px;
$display-gradient: false; // Show gradient seperately instead of as text bg, for debugging

@keyframes rainbow-animation {
	from {
		background-position: 0 0;
	}
	to {
		background-position: $bg-width 0;
	}
}

.rainbow-box {
	margin-bottom: -$height + 2px;

	overflow: hidden;
}

.rainbow-bg {
	background-image: linear-gradient(
		to right,
		list.join($gradient, reverse(pop($gradient)), $separator: comma)
	);
	background-size: $bg-width;
	animation: rainbow-animation 5s linear infinite;

	width: 100%;
	height: $height;
	transform: translateY(-$height - 1px);

	@if $display-gradient {
		transform: translateY(0);
	}
}

.rainbow-text {
	background-color: #fff;
	color: black;
	cursor: pointer;

	font-size: 1.4em;
	font-weight: bold;
	line-height: $height;
	width: 100%;

	text-align: center;

	position: relative;
	mix-blend-mode: screen;
	z-index: 1;
	user-select: none;
}
